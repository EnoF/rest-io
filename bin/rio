#!/usr/bin/env node

const rio = require('commander');
const package = require('../package.json');
const fs = require('fs');
const version = package.version;

console.log(`
  ______ _______ _______ _______     _____  _____
 |_____/ |______ |______    |    ___   |   |     |
 |    \\_ |______ ______|    |        __|__ |_____|
`);

rio.version(version);

rio.option('-s, --src [value]', 'specify the target directory', src =>
    src)
  .option('-o, --out [value]', 'specify the output directory', out =>
    out);

rio.command('gen-docs')
  .description('generate swagger docs from the rest-io resource models')
  .action((options) => {
    notifyGenerationParams();
    console.log('--- Resources ---');
    displayResources(rio.src);
    console.log('--- Resources ---');
  });

rio.parse(process.argv);

if (!rio.src || !rio.out) rio.help();

function notifyGenerationParams() {
  console.log('Swagger documentation - generation');
  console.log(`--- generating ---
    from: ${rio.src}
    to: ${rio.out}`);
  console.log('--- generating ---');
}

function displayResources(dir) {
  const content = fs.readdirSync(dir);
  content
    .filter(name => fs.statSync(`${dir}/${name}`).isDirectory())
    .forEach(name => displayResources(`${dir}/${name}`));

  content
    .filter(name => fs.statSync(`${dir}/${name}`).isFile())
    .forEach(name => console.log(`${dir}/${name}`));
}
