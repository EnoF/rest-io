#!/usr/bin/env node

var rio = require('commander');
var package = require('../package.json');
var version = package.version;

function decorateMessage(message, parameter) {
  console.log('------------------------------------------------------------');
  console.log(message, parameter || '');
  console.log('------------------------------------------------------------');
}

new Promise(function(resolve, reject) {

  var src = null;
  var out = null;

  function generateSwaggerDocumentation(dir) {
    decorateMessage('Starting swagger documentation generation for:', dir);
    src = dir;
  }

  function setOutDir(dir) {
    decorateMessage('Output will be generated in:', dir);
    out = dir;
  }

  rio.version(version);

  rio.option('-g, --generate <dir>', 'generate swagger documentation',
    generateSwaggerDocumentation)
    .option('-o, --out <dir>', 'specify the output directory', setOutDir);

  rio.parse(process.argv);

  resolve({
    src: src,
    out: out
  });

}).then(function(params) {
  var src = params.src;
  var out = params.out;
  if (!src || !out) throw new Error('not enough parameters provided');
  decorateMessage('source', src);
  decorateMessage('output', out);
}).catch(function (error) {
  decorateMessage('exception thrown:', error);
  rio.help();
});
